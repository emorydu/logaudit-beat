// Copyright 2024 Emory.Du <orangeduxiaocheng@gmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v3.20.3
// source: auditbeat.proto

package auditbeat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *UpdatedRequest) Reset() {
	*x = UpdatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditbeat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedRequest) ProtoMessage() {}

func (x *UpdatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auditbeat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedRequest.ProtoReflect.Descriptor instead.
func (*UpdatedRequest) Descriptor() ([]byte, []int) {
	return file_auditbeat_proto_rawDescGZIP(), []int{0}
}

func (x *UpdatedRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type FetchBeatRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *FetchBeatRuleRequest) Reset() {
	*x = FetchBeatRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditbeat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchBeatRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchBeatRuleRequest) ProtoMessage() {}

func (x *FetchBeatRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auditbeat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchBeatRuleRequest.ProtoReflect.Descriptor instead.
func (*FetchBeatRuleRequest) Descriptor() ([]byte, []int) {
	return file_auditbeat_proto_rawDescGZIP(), []int{1}
}

func (x *FetchBeatRuleRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type FetchBeatRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator int32  `protobuf:"varint,1,opt,name=operator,proto3" json:"operator,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FetchBeatRuleResponse) Reset() {
	*x = FetchBeatRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditbeat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchBeatRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchBeatRuleResponse) ProtoMessage() {}

func (x *FetchBeatRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auditbeat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchBeatRuleResponse.ProtoReflect.Descriptor instead.
func (*FetchBeatRuleResponse) Descriptor() ([]byte, []int) {
	return file_auditbeat_proto_rawDescGZIP(), []int{2}
}

func (x *FetchBeatRuleResponse) GetOperator() int32 {
	if x != nil {
		return x.Operator
	}
	return 0
}

func (x *FetchBeatRuleResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UsageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string  `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Status    int32   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	CpuUsage  float64 `protobuf:"fixed64,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemUsage  float64 `protobuf:"fixed64,4,opt,name=mem_usage,json=memUsage,proto3" json:"mem_usage,omitempty"`
	Timestamp int64   `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UsageStatusRequest) Reset() {
	*x = UsageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auditbeat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageStatusRequest) ProtoMessage() {}

func (x *UsageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auditbeat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageStatusRequest.ProtoReflect.Descriptor instead.
func (*UsageStatusRequest) Descriptor() ([]byte, []int) {
	return file_auditbeat_proto_rawDescGZIP(), []int{3}
}

func (x *UsageStatusRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UsageStatusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UsageStatusRequest) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *UsageStatusRequest) GetMemUsage() float64 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

func (x *UsageStatusRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_auditbeat_proto protoreflect.FileDescriptor

var file_auditbeat_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x62, 0x65, 0x61, 0x74, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x26, 0x0a, 0x14, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x22, 0x47, 0x0a, 0x15, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x01, 0x0a,
	0x12, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x32, 0xae, 0x02, 0x0a, 0x10, 0x41, 0x75, 0x64, 0x69, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x42, 0x65, 0x61, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x65, 0x61, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x64, 0x75, 0x2f, 0x64, 0x62, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x2d, 0x62, 0x65, 0x61, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x62, 0x65, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_auditbeat_proto_rawDescOnce sync.Once
	file_auditbeat_proto_rawDescData = file_auditbeat_proto_rawDesc
)

func file_auditbeat_proto_rawDescGZIP() []byte {
	file_auditbeat_proto_rawDescOnce.Do(func() {
		file_auditbeat_proto_rawDescData = protoimpl.X.CompressGZIP(file_auditbeat_proto_rawDescData)
	})
	return file_auditbeat_proto_rawDescData
}

var file_auditbeat_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_auditbeat_proto_goTypes = []interface{}{
	(*UpdatedRequest)(nil),        // 0: auditbeat.UpdatedRequest
	(*FetchBeatRuleRequest)(nil),  // 1: auditbeat.FetchBeatRuleRequest
	(*FetchBeatRuleResponse)(nil), // 2: auditbeat.FetchBeatRuleResponse
	(*UsageStatusRequest)(nil),    // 3: auditbeat.UsageStatusRequest
	(*emptypb.Empty)(nil),         // 4: google.protobuf.Empty
}
var file_auditbeat_proto_depIdxs = []int32{
	1, // 0: auditbeat.AuditBeatService.FetchBeatRule:input_type -> auditbeat.FetchBeatRuleRequest
	4, // 1: auditbeat.AuditBeatService.Download:input_type -> google.protobuf.Empty
	3, // 2: auditbeat.AuditBeatService.UsageStatus:input_type -> auditbeat.UsageStatusRequest
	0, // 3: auditbeat.AuditBeatService.Updated:input_type -> auditbeat.UpdatedRequest
	2, // 4: auditbeat.AuditBeatService.FetchBeatRule:output_type -> auditbeat.FetchBeatRuleResponse
	4, // 5: auditbeat.AuditBeatService.Download:output_type -> google.protobuf.Empty
	4, // 6: auditbeat.AuditBeatService.UsageStatus:output_type -> google.protobuf.Empty
	4, // 7: auditbeat.AuditBeatService.Updated:output_type -> google.protobuf.Empty
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_auditbeat_proto_init() }
func file_auditbeat_proto_init() {
	if File_auditbeat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auditbeat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auditbeat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchBeatRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auditbeat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchBeatRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auditbeat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auditbeat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auditbeat_proto_goTypes,
		DependencyIndexes: file_auditbeat_proto_depIdxs,
		MessageInfos:      file_auditbeat_proto_msgTypes,
	}.Build()
	File_auditbeat_proto = out.File
	file_auditbeat_proto_rawDesc = nil
	file_auditbeat_proto_goTypes = nil
	file_auditbeat_proto_depIdxs = nil
}
