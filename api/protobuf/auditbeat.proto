// Copyright 2024 Emory.Du <orangeduxiaocheng@gmail.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file.

syntax = "proto3";

package auditbeat;

option go_package = "github.com/emorydu/dbaudit-beat/internal/auditbeat";

import "google/protobuf/empty.proto";


service AuditBeatService {
  rpc FetchBeatRule(FetchBeatRuleRequest) returns (FetchBeatRuleResponse) {}
  rpc Download(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  rpc UsageStatus(UsageStatusRequest) returns (google.protobuf.Empty) {}
  rpc Updated(UpdatedRequest) returns (google.protobuf.Empty) {}
}


message UpdatedRequest {
  string ip = 1;
}

message FetchBeatRuleRequest {
  string ip = 1;
  string os = 2;
}

message FetchBeatRuleResponse {
  int32 operator = 1;
  bytes data = 2;
  repeated string host_infos = 3;
}

message UsageStatusRequest {
  string ip = 1;
  int32 status = 2;
  double cpu_usage = 3;
  double mem_usage = 4;
  int64 timestamp = 5;
}
